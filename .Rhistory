path<-here("A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/Folder_2_from_2020_Outfall_Flow_Plots")
path
data_files = list.files(path=path, pattern = "*.csv")
data_files
df <- data_files %>%
map(function(x) {
read.csv(paste0(path, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
df
DailyQ_2020OFP <- df %>%
filter(!is.na(Flow..cfs.))
i <- sapply(DailyQ_2020OFP, is.factor)  #https://stackoverflow.com/questions/2851015/convert-data-frame-columns-from-factors-to-characters
DailyQ_2020OFP[i] <- lapply(DailyQ_2020OFP[i], as.character)
str(DailyQ_2020OFP)
DailyQ_2020OFP$Inst.Time = substr(DailyQ_2020OFP$Inst.Time, 1, nchar(DailyQ_2020OFP$`Inst.Time`)-4)
DailyQ_2020OFP <- DailyQ_2020OFP %>%
mutate(Station = SourceFile) %>%
mutate(date = as.Date(Inst.Time, format = '%m/%d/%Y'))
DailyQ_2020OFP$Station = sub("./", "", DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station = sub(".csv", "", DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station = sub("_all", "", DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("J01-9066-2", "J01-9066-2 (J01P03)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("J01-9131-1", "J01-9131-1 (J01P28)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("J01-9992-1", "J01-9992-1(J01P27)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("J03-9221-1", "J03-9221-1 (J03P02)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("J06-9079-1", "J06-9079-1 (J06P03)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("J06-10011-1", "J06-10011-1 (J06P01)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("K01-12126-1", "K01-12126-1 (K01S01)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("L01-728-3", "L01-728-3 (L01S02)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("L01-766-2", "L01-766-2 (L01S06)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("L03-214-2", "L03-214-2 (L03P18)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("L03-316-3", "L03-316-3 (L03P12)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("L03-074-1", "L03-074-1 (L03B01)",DailyQ_2020OFP$Station)
DailyQ_2020OFP$Station<-sub("M01-050-4", "M01-050-4 (M01@CGV)",DailyQ_2020OFP$Station)
DailyQ_2020OFP <- DailyQ_2020OFP %>%
select(-SourceFile) %>%
#filter(DailyQ_2020OFPCont > 4) %>% #filter away days from when flow meter not working correctly for J01P27 and J01P28
filter(Station != 'J01-9992-1 (J01P27)'|date != '2018-04-06') %>%
filter(Station != 'J01-9992-1 (J01P27)'|date != '2018-04-08') %>%
mutate(date = as.Date(Inst.Time, format = '%m/%d/%Y'))
DailyQ_2020OFP[!duplicated(DailyQ_2020OFP[c(1,2)]), ]
str(DailyQ_2020OFP)
saveRDS(DailyQ_2020OFP, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2020OFP.rds'))
write_csv(DailyQ_2020OFP, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2020OFP.csv'))
#Continuous flow data OCFS, 2021
pathOCFS_2021<-here("A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/OCFS_2021_provisional")
pathOCFS_2021
data_filespathOCFS_2021 = list.files(path=pathOCFS_2021, pattern = "*.csv")
data_filespathOCFS_2021
df <- data_filespathOCFS_2021 %>%
map(function(x) {
read.csv(paste0(pathOCFS_2021, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
df
DailyQ_OCFS_2021 <- df %>%
filter(!is.na(Flow..cfs.))
i <- sapply(DailyQ_OCFS_2021, is.factor)  #https://stackoverflow.com/questions/2851015/convert-data-frame-columns-from-factors-to-characters
DailyQ_OCFS_2021[i] <- lapply(DailyQ_OCFS_2021[i], as.character)
str(DailyQ_OCFS_2021)
DailyQ_OCFS_2021$Inst.Time = substr(DailyQ_OCFS_2021$Inst.Time, 1, nchar(DailyQ_OCFS_2021$`Inst.Time`)-4)
DailyQ_OCFS_2021 <- DailyQ_OCFS_2021 %>%
mutate(Station = SourceFile) %>%
mutate(date = as.Date(Inst.Time, format = '%m/%d/%Y'))
DailyQ_OCFS_2021$Station = sub("./", "", DailyQ_OCFS_2021$Station)
DailyQ_OCFS_2021$Station = sub(".csv", "", DailyQ_OCFS_2021$Station)
DailyQ_OCFS_2021$Station = sub("_all", "", DailyQ_OCFS_2021$Station)
DailyQ_OCFS_2021[!duplicated(DailyQ_OCFS_2021[c(1,2)]), ]
str(DailyQ_OCFS_2021)
saveRDS(DailyQ_OCFS_2021, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_OCFS_2021.rds'))
write_csv(DailyQ_OCFS_2021, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_OCFS_2021.csv'))
#SWN
pathSWN_2022<-here("A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/SWN_2022_provisional")
pathSWN_2022
data_filespathSWN_2022 = list.files(path=pathSWN_2022, pattern = "*.csv")
data_filespathSWN_2022
df <- data_filespathSWN_2022 %>%
map(function(x) {
read.csv(paste0(pathSWN_2022, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
df
DailyQ_SWN_2022 <- df %>%
filter(!is.na(Flow..cfs.))
i <- sapply(DailyQ_SWN_2022, is.factor)  #https://stackoverflow.com/questions/2851015/convert-data-frame-columns-from-factors-to-characters
DailyQ_SWN_2022[i] <- lapply(DailyQ_SWN_2022[i], as.character)
str(DailyQ_SWN_2022)
DailyQ_SWN_2022$Inst.Time = substr(DailyQ_SWN_2022$Inst.Time, 1, nchar(DailyQ_SWN_2022$`Inst.Time`)-4)
DailyQ_SWN_2022 <- DailyQ_SWN_2022 %>%
mutate(Station = SourceFile) %>%
mutate(date = as.Date(Inst.Time, format = '%m/%d/%Y'))
DailyQ_SWN_2022$Station = sub("./", "", DailyQ_SWN_2022$Station)
DailyQ_SWN_2022$Station = sub(".csv", "", DailyQ_SWN_2022$Station)
DailyQ_SWN_2022$Station = sub("_all", "", DailyQ_SWN_2022$Station)
DailyQ_SWN_2022[!duplicated(DailyQ_SWN_2022[c(1,2)]), ]
str(DailyQ_SWN_2022)
saveRDS(DailyQ_SWN_2022, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_SWN_2021.rds'))
write_csv(DailyQ_SWN_2022, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_SWN_2021.csv'))
pathDFM_2022<-here("A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/DFM_2022_provisional")
pathDFM_2022
data_filespathDFM_2022 = list.files(path=pathDFM_2022, pattern = "*.csv")
data_filespathDFM_2022
df <- data_filespathSWN_2022 %>%
map(function(x) {
read.csv(paste0(pathDFM_2022, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
pathDFM_2022<-here("A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/DFM_2022_provisional")
pathDFM_2022
data_filespathDFM_2022 = list.files(path=pathDFM_2022, pattern = "*.csv")
data_filespathDFM_2022
df <- data_filespathSWN_2022 %>%
map(function(x) {
read.csv(paste0(pathDFM_2022, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
df <- data_filespathSWN_2022 %>%
map(function(x) {
read.csv(paste0(pathDFM_2022, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
DailyQ_DFM_2022$Inst.Time = substr(DailyQ_DFM_2022$Inst.Time, 1, nchar(DailyQ_DFM_2022$`Inst.Time`)-4)
df <- data_filespathDFM_2022 %>%
map(function(x) {
read.csv(paste0(pathDFM_2022, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
DailyQ_DFM_2022 <- df %>%
filter(!is.na(Flow..cfs.))
i <- sapply(DailyQ_DFM_2022, is.factor)  #https://stackoverflow.com/questions/2851015/convert-data-frame-columns-from-factors-to-characters
DailyQ_DFM_2022[i] <- lapply(DailyQ_DFM_2022[i], as.character)
str(DailyQ_DFM_2022)
DailyQ_DFM_2022$Inst.Time = substr(DailyQ_DFM_2022$Inst.Time, 1, nchar(DailyQ_DFM_2022$`Inst.Time`)-4)
DailyQ_DFM_2022 <- DailyQ_DFM_2022 %>%
mutate(Station = SourceFile) %>%
mutate(date = as.Date(Inst.Time, format = '%m/%d/%Y'))
DailyQ_DFM_2022$Station = sub("./", "", DailyQ_DFM_2022$Station)
DailyQ_DFM_2022$Station = sub(".csv", "", DailyQ_DFM_2022$Station)
DailyQ_DFM_2022$Station = sub("_all", "", DailyQ_DFM_2022$Station)
DailyQ_DFM_2022[!duplicated(DailyQ_DFM_2022[c(1,2)]), ]
str(DailyQ_DFM_2022)
saveRDS(DailyQ_DFM_2022, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_DFM_2021.rds'))
write_csv(DailyQ_DFM_2022, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_DFM_2021.csv'))
values <- list()
values[['DailyQ_2018R']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2018R.rds'
DailyQ_2018R <-  readRDS(values[["DailyQ_2018R"]])
DailyQ_2018R_d <-   left_join(DailyQ_2018R, RainInf, by = c('date'='date', 'Station'='FacilityID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
View(RainInf)
View(DailyQ_2018R)
DailyQ_2018R_d <-   left_join(DailyQ_2018R, RainInf, by = c('date'='Date', 'Station'='FACILITYID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
saveRDS(DailyQ_2018R_d, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2018R_d.rds'))
write_csv(DailyQ_2018R_d, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2018R_d.csv'))
View(DailyQ_2020OFP)
values <- list()
values[['DailyQ_2020OFP']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2020OFP.rds'
DailyQ_2020OFP <-  readRDS(values[["DailyQ_2020OFP"]])
DailyQ_2020OFP_d <-   left_join(DailyQ_2020OFP, RainInf, by = c('date'='date', 'Station'='FacilityID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
DailyQ_2020OFP_d <-   left_join(DailyQ_2020OFP, RainInf, by = c('date'='Date', 'Station'='FACILITYID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
saveRDS(DailyQ_2020OFP_d, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2020OFP_d.rds'))
write_csv(DailyQ_2020OFP_d, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_2020OFP_d.csv'))
values <- list()
values[['DailyQ_OCFS_2021']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_OCFS_2021.rds'
DailyQ_OCFS_2021 <-  readRDS(values[["DailyQ_OCFS_2021"]])
DailyQ_OCFS_2021$Station[DailyQ_OCFS_2021$Station == "L03-693-1"] <- "L03-693-1 (L03P11)"
DailyQ_OCFS_2021$Station[DailyQ_OCFS_2021$Station == "L02-166-3"] <- "L02-166-3 (L02P26)"
values <- list()
values[['DailyQ_SWN_2021']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_SWN_2021.rds'
DailyQ_SWN_2021 <-  readRDS(values[["DailyQ_SWN_2021"]])
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9005-1"] <- "J01-9005-1 (J03P05)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9007-1"] <- "J01-9007-1 (J02P05)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9008-1"] <- "J01-9008-1 (J01P30)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9066-1"] <- "J01-9066-1 (J01P04)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9066-2"] <- "J01-9066-2 (J01P03)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9131-1"] <- "J01-9131-1 (J01P28)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9144-1"] <- "J01-9144-1 (J01P23)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9144-4"] <- "J01-9144-1 (J01P26)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9224-1"] <- "J01-9224-1 (J01P24)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9224-2"] <- "J01-9224-2 (J01P25)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9264-1"] <- "J01-9264-1 (J01P06)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-9992-1"] <- "J01-9992-1 (J01P27)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-10004-1"] <- "J01-10004-1 (J01P01)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-10017-1"] <- "J01-10017-1 (J01TBN4)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J01-10019-1"] <- "J01-10019-1 (J01P33)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J03-9368-1"] <- "J03-9368-1 (J03TBN1)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J03-9368-2"] <- "J03-9368-1 (J03TBN2)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J06-9079-1"] <- "J06-9079-1 (J06P03)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J06-10011-1"] <- "J06-10011-1 (J06P01)"
DailyQ_SWN_2021$Station[DailyQ_SWN_2021$Station == "J07-9109-4"] <- "J07-9109-4 (J07P02)"
DailyQ_OCFS_2021_d <-   left_join(DailyQ_OCFS_2021, RainInf, by = c('date'='Date', 'Station'='FACILITYID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
saveRDS(DailyQ_OCFS_2021_d, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_OCFS_2021_d.rds'))
write_csv(DailyQ_OCFS_2021_d, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_OCFS_2021_d.csv'))
DailyQ_SWN_2022_d <-   left_join(DailyQ_SWN_2022, RainInf, by = c('date'='Date', 'Station'='FACILITYID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
saveRDS(DailyQ_SWN_2022_d, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_SWN_2022_d.rds'))
write_csv(DailyQ_SWN_2022_d, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_SWN_2022_d.csv'))
pathDFM_2022<-here("A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/DFM_2022_provisional")
pathDFM_2022
data_filespathDFM_2022 = list.files(path=pathDFM_2022, pattern = "*.csv")
data_filespathDFM_2022
df <- data_filespathDFM_2022 %>%
map(function(x) {
read.csv(paste0(pathDFM_2022, "/", x)) %>%
mutate(SourceFile = x)
}
) %>%
reduce(rbind)
df
DailyQ_DFM_2022 <- df %>%
filter(!is.na(Flow..cfs.))
i <- sapply(DailyQ_DFM_2022, is.factor)  #https://stackoverflow.com/questions/2851015/convert-data-frame-columns-from-factors-to-characters
DailyQ_DFM_2022[i] <- lapply(DailyQ_DFM_2022[i], as.character)
str(DailyQ_DFM_2022)
DailyQ_DFM_2022$Inst.Time = substr(DailyQ_DFM_2022$Inst.Time, 1, nchar(DailyQ_DFM_2022$`Inst.Time`)-4)
DailyQ_DFM_2022 <- DailyQ_DFM_2022 %>%
mutate(Station = SourceFile) %>%
mutate(date = as.Date(Inst.Time, format = '%m/%d/%Y'))
DailyQ_DFM_2022$Station = sub("./", "", DailyQ_DFM_2022$Station)
DailyQ_DFM_2022$Station = sub(".csv", "", DailyQ_DFM_2022$Station)
DailyQ_DFM_2022$Station = sub("_all", "", DailyQ_DFM_2022$Station)
DailyQ_DFM_2022[!duplicated(DailyQ_DFM_2022[c(1,2)]), ]
str(DailyQ_DFM_2022)
saveRDS(DailyQ_DFM_2022, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_DFM_2022.rds'))
write_csv(DailyQ_DFM_2022, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_DFM_2022.csv'))
DailyQ_DFM_2022_d <-   left_join(DailyQ_DFM_2022, RainInf, by = c('date'='Date', 'Station'='FACILITYID')) %>%   #dry days only, each flow measurment
filter(wet_within_72==FALSE)
saveRDS(DailyQ_DFM_2022_d, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_DFM_2022_d.rds'))
write_csv(DailyQ_DFM_2022_d, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DailyQ_DFM_2022_d.csv'))
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening)
source('A.2 Outfall Assessments/DryWeatherLoadingCalcs/1projectsetup.R')
install.packages("arcgisbinding", repos = "https://r.esri.com", type = "win.binary")
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening)
saveRDS(FieldScreening, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.rds'))
write_csv(FieldScreening, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.csv'))
str(FieldScreening)
FieldScreeningr$ObsRecordDate = substrRight <- function(x, n) {
substr(x, nchar(x)-n+1, nchar(x))
}
library(dplyr)
FieldScreeningr <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/Flow/OCEnvRes_July162021.csv"
FieldScreeningr <- read.csv(FieldScreeningr)
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening)
FieldScreening$ObsRecordDate = substrRight <- function(x, n) {
substr(x, nchar(x)-n+1, nchar(x))
}
FieldScreening$ObsRecordDate = substrRight <- function(FieldScreening, n) {
substr(FieldScreening, nchar(FieldScreening)-n+1, nchar(FieldScreening))
}
substrRight <- function(FieldScreening, n) {
substr(FieldScreening, nchar(FieldScreening)-n+1, nchar(FieldScreening))
}
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening)
View(FieldScreening)
FieldScreeningr<-strsplit(as.character(FieldScreening$ObsRecordDate),',')
View(FieldScreeningr)
FieldScreeningr$ObsRecordDate<-strsplit(as.character(FieldScreening$ObsRecordDate),',')
FieldScreening$ObsRecordDate<-strsplit(as.character(FieldScreening$ObsRecordDate),',')
View(FieldScreening)
library(stringr)
FieldScreening[c('Day', 'Month', 'Date', 'Year')] <- str_split_fixed(FieldScreening$ObsRecordDate, 'sep', 4)
FieldScreening[c('Day', 'Month', 'Date', 'Year')] <- str_split_fixed(FieldScreening$ObsRecordDate, ',', 4)
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening)
saveRDS(FieldScreening, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.rds'))
write_csv(FieldScreening, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.csv'))
FieldScreening[c('Day', 'Month', 'Date', 'Year')] <- str_split_fixed(FieldScreening$ObsRecordDate, ', ', 4)
library(stringr)
FieldScreening[c('Day', 'Date', 'Year')] <- str_split_fixed(FieldScreening$ObsRecordDate, ', ', 3)
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening)
str(FieldScreening)
# Save processed dataset
saveRDS(FieldScreening, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.rds'))
write_csv(FieldScreening, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.csv'))
FieldScreening[c('Day', 'Date', 'Year')] <- str_split_fixed(FieldScreening$ObsRecordDate, ', ', 3)
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(POINTX))
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(PointX))
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(PointX))
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(PointX))
FieldScreening[c('Day', 'Date', 'Year')] <- str_split_fixed(FieldScreening$ObsRecordDate, ', ', 3)
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(PointX))
str(FieldScreening)
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(PointX)) %>%
mutate(Date = as.Date(ObsRecordDate, format = '%m/%d/%Y'))
FieldScreening <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/ProvisionalFlow/FieldScreening_2022.csv"
FieldScreening<-read.csv(FieldScreening) %>%
filter(!is.na(PointX)) %>%
mutate(Date = as.Date(ObsRecordDate, format = '%m/%d/%Y'))
str(FieldScreening)
saveRDS(FieldScreening, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.rds'))
write_csv(FieldScreening, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.csv'))
values <- list()
values[['FieldScreening']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.rds'
FieldScreeningb <-  readRDS(values[["FieldScreening"]])
FieldScreeningb <- within(FieldScreeningb, FACILITYID[FACILITYID == 'L04-136-1 (L04P07)' & FLOWCOND == 'Flowing'] <- 'L04-136-1u (L04P07)')
FieldScreeningb <- within(FieldScreeningb, FacilityID[FacilityID == 'L04-136-1 (L04P07)' & FLOWCOND == 'Flowing'] <- 'L04-136-1u (L04P07)')
FieldScreeningb <- within(FieldScreeningb, FacilityID[FacilityID == 'L04-136-1 (L04P07)' & FlowCondition == 'Flowing'] <- 'L04-136-1u (L04P07)')
values <- list()
values[['FieldScreening']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreening.rds'
FieldScreeningb <-  readRDS(values[["FieldScreening"]])
FieldScreeningb <- within(FieldScreeningb, FacilityID[FacilityID == 'L04-136-1 (L04P07)' & FlowCondition == 'Flowing'] <- 'L04-136-1u (L04P07)')
values <- list()
values[['RainInf']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/RainInf.rds'
RainInf <-  readRDS(values[["RainInf"]])
FieldScreen_dry <- FieldScreeningb %>%
left_join(., RainInf, by = c('FacilityID' = 'FACIILTYID','Date' = 'Date')) %>%
filter(wet_within_72 == "FALSE")
FieldScreen_dry <- FieldScreeningb %>%
left_join(., RainInf, by = c('FacilityID' = 'FACILTYID','Date' = 'Date')) %>%
filter(wet_within_72 == "FALSE")
FieldScreen_dry <- FieldScreeningb %>%
left_join(., RainInf, by = c('FacilityID' = 'FACILITYID','Date' = 'Date')) %>%
filter(wet_within_72 == "FALSE")
saveRDS(FieldScreen_dry, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreen_dry.rds'))
write_csv(FieldScreen_dry, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreen_dry.csv'))
View(FieldScreen_dry)
FieldScreen_dry <- FieldScreeningb %>%
left_join(., RainInf, by = c('FacilityID' = 'FACILITYID','Date' = 'Date')) %>%
filter(wet_within_72 == "FALSE") %>%
select('Jurisdiction', 'FacilityID', 'FlowCondition', 'FloatDischargeCFS','VolumeDischargeCFS', 'SampleDry', 'FlowConnectivity',  'Date')
saveRDS(FieldScreen_dry, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreen_dry.rds'))
write_csv(FieldScreen_dry, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/FieldScreen_dry.csv'))
Trib<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint_Tributary') %>%
arc.select() %>%
tibble::as_tibble()
Trib$FACILITYID<-sub("J01-9224-1", "J01-9224-1 (J01P24)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9224-2", "J01-9224-2 (J01P25)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9992-1", "J01-9992-1 (J01P27)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J06-9362-1", "J06-9362-1 (J06-03)",Trib$FACILITYID)
Trib$FACILITYID<-sub("K01-12177-1", "K01-12177-1 (K01P07)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-731-1", "L01-731-1 (L08TBN2)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-766-2", "L01-766-2 (L01S06)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-166-3", "L02-166-3 (L02P26)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-366-1", "L02-366-1 (MVL02P14)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-622-2", "L02-622-2 (L02P32)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L03-316-3", "L03-316-3 (L03P12)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L03-662-3", "L03-662-3 (L03P16)",Trib$FACILITYID)
Trib$FACILITYID<-sub("SC10-075-3", "SC10-075-3 (M00S01)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-10041-2", "J01-10041-2 (J03P13)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9007-1", "J01-9007-1 (J02P05)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-10004-1", "J01-10004-1 (J01P01)",Trib$FACILITYID)
Trib$FACILITYID<-sub("I01-11343-2", "I01-11343-2 (I02P18)",Trib$FACILITYID)
Trib$FACILITYID<-sub("M01-050-4", "M01-050-4 (M01@CGV)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-728-4", "L01-728-4 (L01-DP)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9131-1", "J01-9131-1 (J01P28)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9264-1", "J01-9264-1 (J01P06)",Trib$FACILITYID)
Trib$FACILITYID<-sub("I01-11216-1", "I01-11216-1 (I02P13)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9066-1", "J01-9066-1 (J01P04)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9364-3", "J01-9364-3 (J01P21)",Trib$FACILITYID)
View(Trib)
Trib<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint_Tributary') %>%
arc.select() %>%
tibble::as_tibble()
#update station names
Trib$FACILITYID<-sub("J01-9224-1", "J01-9224-1 (J01P24)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9224-2", "J01-9224-2 (J01P25)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J06-9362-1", "J06-9362-1 (J06-03)",Trib$FACILITYID)
Trib$FACILITYID<-sub("K01-12177-1", "K01-12177-1 (K01P07)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-766-2", "L01-766-2 (L01S06)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-166-3", "L02-166-3 (L02P26)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-622-2", "L02-622-2 (L02P32)",Trib$FACILITYID)
Trib$FACILITYID<-sub("SC10-075-3", "SC10-075-3 (M00S01)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-10041-2", "J01-10041-2 (J03P13)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9007-1", "J01-9007-1 (J02P05)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-10004-1", "J01-10004-1 (J01P01)",Trib$FACILITYID)
Trib$FACILITYID<-sub("I01-11343-2", "I01-11343-2 (I02P18)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-728-4", "L01-728-4 (L01-DP)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9264-1", "J01-9264-1 (J01P06)",Trib$FACILITYID)
Trib$FACILITYID<-sub("I01-11216-1", "I01-11216-1 (I02P13)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9066-1", "J01-9066-1 (J01P04)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9364-3", "J01-9364-3 (J01P21)",Trib$FACILITYID)
MO <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/MO2022.csv"
MO<-read.csv(MO)
View(MO)
MO<-read.csv(MO) %>%
select('Facility.Identifier')
MO <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/MO2022.csv"
MO<-read.csv(MO) %>%
select('Facility.Identifier')
DischargePointTrib <-   Trib %>%
full_join(., MO,
by = c("FACILITYID" = "Facility.Identifier"))
View(DischargePointTrib)
DischargePointTrib <-   Trib %>%
right_join(., MO,
by = c("FACILITYID" = "Facility.Identifier"))
Trib<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint_Tributary') %>%
arc.select() %>%
tibble::as_tibble() %>%
select('FACILITYID','area_acres')
#update station names
Trib$FACILITYID<-sub("J01-9224-1", "J01-9224-1 (J01P24)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9224-2", "J01-9224-2 (J01P25)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J06-9362-1", "J06-9362-1 (J06-03)",Trib$FACILITYID)
Trib$FACILITYID<-sub("K01-12177-1", "K01-12177-1 (K01P07)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-766-2", "L01-766-2 (L01S06)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-166-3", "L02-166-3 (L02P26)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L02-622-2", "L02-622-2 (L02P32)",Trib$FACILITYID)
Trib$FACILITYID<-sub("SC10-075-3", "SC10-075-3 (M00S01)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-10041-2", "J01-10041-2 (J03P13)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9007-1", "J01-9007-1 (J02P05)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-10004-1", "J01-10004-1 (J01P01)",Trib$FACILITYID)
Trib$FACILITYID<-sub("I01-11343-2", "I01-11343-2 (I02P18)",Trib$FACILITYID)
Trib$FACILITYID<-sub("L01-728-4", "L01-728-4 (L01-DP)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9264-1", "J01-9264-1 (J01P06)",Trib$FACILITYID)
Trib$FACILITYID<-sub("I01-11216-1", "I01-11216-1 (I02P13)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9066-1", "J01-9066-1 (J01P04)",Trib$FACILITYID)
Trib$FACILITYID<-sub("J01-9364-3", "J01-9364-3 (J01P21)",Trib$FACILITYID)
MO <-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/MO2022.csv"
MO<-read.csv(MO) %>%
select('Facility.Identifier')
DischargePointTrib <-   Trib %>%
right_join(., MO,
by = c("FACILITYID" = "Facility.Identifier"))
saveRDS(DischargePointTrib, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DischargePointTrib.rds'))
write_csv(DischargePointTrib, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DischargePointTrib.csv'))
swDischarge<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint') %>%
arc.select() %>%
tibble::as_tibble()
View(swDischarge)
swDischarge<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint') %>%
arc.select() %>%
tibble::as_tibble() %>%
select(FACILITYID, JURISDICTI, AVGDISCHARGE, DRYSAMPLED,OCFS, PERSISTENTFLOW)
swDischarge<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint') %>%
arc.select() %>%
tibble::as_tibble() %>%
select(FACILITYID, JURISDICTI, AVGDISCHARGE, SAMPLEDRY,OCFS, PERSISTENTFLOW)
swDischarge<- arc.open('C:/Users/givens/OneDrive - County of Orange/Shared with Everyone/Outfall/OutfallFieldScreen/Results/SPOCDSQL1205.sde/OCEnvRes.OCENVRESUSER.swDischargePoint') %>%
arc.select() %>%
tibble::as_tibble() %>%
select(FACILITYID, JURISDICTI, AVGDISCHARGE, SAMPLEDRY,PERSISTENTFLOW)
View(DischargePointTrib)
View(MO)
DischargePointTrib <-   Trib %>%
right_join(., MO,
by = c("FACILITYID" = "Facility.Identifier")) %>%
left_join(., swDischarge, by=c('FACILITYID', 'Facility.Identifier'))
DischargePointTrib <-   Trib %>%
right_join(., MO,
by = c("FACILITYID" = "Facility.Identifier")) %>%
left_join(., swDischarge, by='FACILITYID')
saveRDS(DischargePointTrib, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DischargePointTrib.rds'))
write_csv(DischargePointTrib, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/DischargePointTrib.csv'))
file_url<-"A.2 Outfall Assessments/DryWeatherLoadingCalcs/Input/JURISinTRIBS.csv"
JURISinTRIBS<-read.csv(file_url)
JURISinTRIBS$FACILITYID<-sub("J01-9224-1", "J01-9224-1 (J01P24)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9224-2", "J01-9224-2 (J01P25)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9992-1", "J01-9992-1 (J01P27)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J06-9362-1", "J06-9362-1 (J06-03)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("K01-12177-1", "K01-12177-1 (K01P07)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L01-731-1", "L01-731-1 (L08TBN2)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L01-766-2", "L01-766-2 (L01S06)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L02-166-3", "L02-166-3 (L02P26)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L02-366-1 (L02-P14)", "L02-366-1 (MVL02P14)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L02-622-2", "L02-622-2 (L02P32)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L03-316-3", "L03-316-3 (L03P12)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("L03-662-3", "L03-662-3 (L03P16)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("SC10-075-3", "SC10-075-3 (M00S01)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-10041-2", "J01-10041-2 (J03P13)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9007-1", "J01-9007-1 (J02P05)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-10004-1", "J01-10004-1 (J01P01)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("I01-11343-2", "I01-11343-2 (I02P18)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9131-1", "J01-9131-1 (J01P28)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9264-1", "J01-9264-1 (J01P06)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("I01-11216-1", "I01-11216-1 (I02P13)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9066-1", "J01-9066-1 (J01P04)",JURISinTRIBS$FACILITYID)
JURISinTRIBS$FACILITYID<-sub("J01-9364-3", "J01-9364-3 (J01P21)",JURISinTRIBS$FACILITYID)
View(JURISinTRIBS)
JURISinTRIBS_MO <-JURISinTRIBS %>%
right_join(., MO,
by = c('FACILITYID'))
JURISinTRIBS_MO <-JURISinTRIBS %>%
right_join(., MO,
by = c('FACILITYID'='Facility.Identifier'))
View(JURISinTRIBS_MO)
saveRDS(JURISinTRIBS_MO, file = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/JURISinTRIBS_MO.rds'))
write_csv(JURISinTRIBS_MO, path = here('A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/JURISinTRIBS_MO.csv'))
values <- list()
values[['R9_Cities']] <- 'A.2 Outfall Assessments/DryWeatherLoadingCalcs/Output/R9_Cities.rds'
R9_Cities <-  readRDS(values[["R9_Cities"]])
